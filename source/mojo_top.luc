module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]    // DIP switches on IO Shield
  ) {
  
  sig rst;                  // reset signal
  new_alu alu;
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    
    edge_detector edge_detector (#RISE(1), #FALL(0));
    reset_conditioner reset_cond;
    
    .rst(rst){
      mult_seven_seg seg;                 // Initialize multi_seven_seg
      mult_dec_ctr dec_ctr;               // Initialize multi_dec_ctr
      counter ctr (#SIZE(1), #DIV(25));    // Initialize counter to count every 2^25(~33.5 million) clock cycle, on MOJO is 50 million clock cycle per second 
      fsm state = {START, ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN, ELEVEN, TWELVE, THIRTEEN, 
      FOURTEEN, FIFTEEN, SIXTEEN, SEVENTEEN, EIGHTEEN, NINETEEN, TWENTY, TWENTYONE, TWENTYTWO, TWENTYTHREE, TWENTYFOUR, 
        TWENTYFIVE, TWENTYSIX, TWENTYSEVEN, TWENTYEIGHT, TWENTYNINE, THIRTY, THIRTYONE, THIRTYTWO, THIRTYTHREE, THIRTYFOUR, 
        THIRTYFIVE, THIRTYSIX, THIRTYSEVEN, THIRTYEIGHT, THIRTYNINE, FORTY, FORTYONE, FORTYTWO, FORTYTHREE, ERROR}; // Initializate fsm
    }
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
    
    io_led = 3x{{8h00}};    // turn LEDs off
    alu.firstNumber = 16x{0};  // input zero first
    alu.secondNumber = 16x{0}; // input zero first
    alu.alufn = 6x{0};         // input zero first
        
    edge_detector.in = bz; // Have 0 output from edge_detector
    dec_ctr.inc = 0;       // Stop multi_dec_ctr from counting
    seg.values = {bzzzz,bzzzz,bzzzz,bzzzz};    // Turn multi_seven_seg off
    io_seg = 8hz;          // Turn segments off
    io_sel = 4hz;          // Turn selection off
    
    // Have 2 different modes, an automatic testing mode and a manual testing mode
    // Dip switch is used to select which mode the fpga is in
    // If dip switch is on, automatic model is selected. Else is manual mode
    if(io_dip[2][7]){
      edge_detector.in = ctr.value;      // Input value of counter into edge detector
      seg.values = dec_ctr.digits;       // Input the output of decimal counter into the multi seven seg values
      dec_ctr.inc = edge_detector.out;
      
      io_seg = ~seg.seg;                 // Connect segments to the driver
      io_sel = ~seg.sel;                 // Connect digit select to the driver
    }
    
    case (state.q) {
    
      // Default state is in start to allow for manual testing
      state.START:
        io_led[2][7] = 1;
        if(io_dip[2][7]){
          state.d = state.ZERO;
        }
        
      state.ZERO:
        alu.firstNumber = h0001;
        alu.secondNumber = h0002;
        alu.alufn = b000000;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.ONE;
          if(alu.answer != h0003 | alu.z != 0 | alu.v != 0 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
     
      //plus
      state.ONE:
        alu.firstNumber = h7FFF;
        alu.secondNumber = h7FFF;
        alu.alufn = b000000;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWO;
          if(alu.answer != hFFFE | alu.z != 0 | alu.v != 1 | alu.n != 1){
            state.d = state.ERROR;
          }
        }
     
      state.TWO:
        alu.firstNumber = h0003;
        alu.secondNumber = hFFFF;
        alu.alufn = b000000;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THREE;
          if(alu.answer != h0002 | alu.z != 0 | alu.v != 0 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
        
      state.THREE:
        alu.firstNumber = h8000;
        alu.secondNumber = h8000;
        alu.alufn = b000000;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.FOUR;
          if(alu.answer != h0000 | alu.z != 1 | alu.v != 1 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
      
      //minus
      state.FOUR:
        alu.firstNumber = h0003;
        alu.secondNumber = h0002;
        alu.alufn = b000001;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.FIVE;
          if(alu.answer != h0001 | alu.z != 0 | alu.v != 0 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
      
      state.FIVE:
        alu.firstNumber = h0001;
        alu.secondNumber = hFFFF;
        alu.alufn = b000001;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.SIX;
          if(alu.answer != h0002 | alu.z != 0 | alu.v != 0 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
      
      state.SIX:
        alu.firstNumber = h7FFF;
        alu.secondNumber = hFFFF;
        alu.alufn = b000001;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.SEVEN;
          if(alu.answer != h8000 | alu.z != 0 | alu.v != 1 | alu.n != 1){
            state.d = state.ERROR;
          }
        }
        
      state.SEVEN:
        alu.firstNumber = hF004;
        alu.secondNumber = hF005;
        alu.alufn = b000001;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.EIGHT;
          if(alu.answer != hFFFF | alu.z != 0 | alu.v != 0 | alu.n != 1){
            state.d = state.ERROR;
          }
        }
        
      //multiply
      state.EIGHT:
        alu.firstNumber = h0003;
        alu.secondNumber = h0002;
        alu.alufn = b000010;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.NINE;
          if(alu.answer != h0006 | alu.z != 0 | alu.v != 0 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
       
      state.NINE:
        alu.firstNumber = h7FFF;
        alu.secondNumber = h7FFF;
        alu.alufn = b000010;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TEN;
          if(alu.answer != h0001 | alu.z != 0 | alu.v != 1 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
        
      state.TEN:
        alu.firstNumber = h0001;
        alu.secondNumber = hFFFF;
        alu.alufn = b000010;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.ELEVEN;
          if(alu.answer != hFFFF | alu.z != 0 | alu.v != 0 | alu.n != 1){
            state.d = state.ERROR;
          }
        }
        
      state.ELEVEN:
        alu.firstNumber = h0000;
        alu.secondNumber = h0000;
        alu.alufn = b00010;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWELVE;
          if(alu.answer != h0000 | alu.z != 1 | alu.v != 0 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
        
      state.TWELVE:
        alu.firstNumber = hFFFF;
        alu.secondNumber = hFFFA;
        alu.alufn = b000010;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTEEN;
          if(alu.answer != h0006 | alu.z != 0 | alu.v != 1 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
        
      //divide
      state.THIRTEEN:
        alu.firstNumber = h0004;
        alu.secondNumber = h0002;
        alu.alufn = b000011;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.FOURTEEN;
          if(alu.answer != h0002 | alu.z != 0 | alu.v != 0 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
        
      state.FOURTEEN:
        alu.firstNumber = h0004;
        alu.secondNumber = hFFFE;
        alu.alufn = b000011;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.FIFTEEN;
          if(alu.answer != hFFFE | alu.z != 0 | alu.v != 0 | alu.n != 1){
            state.d = state.ERROR;
          }
        }
        
      state.FIFTEEN:
        alu.firstNumber = hFFFC;
        alu.secondNumber = hFFFE;
        alu.alufn = b000011;
        io_led[2][0] = alu.z;
        io_led[2][1] = alu.v;
        io_led[2][2] = alu.n;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.SIXTEEN;
          if(alu.answer != h0002 | alu.z != 0 | alu.v != 0 | alu.n != 0){
            state.d = state.ERROR;
          }
        }
      
      //comp
      state.SIXTEEN:
        alu.firstNumber = h0001;
        alu.secondNumber = h0001;
        alu.alufn = b110001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.SEVENTEEN;
          if(alu.answer != h0000){
            state.d = state.ERROR;
          }
        }
      
      state.EIGHTEEN:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b000001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.NINETEEN;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }
        
      state.NINETEEN:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b00001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTY;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }

      state.TWENTY:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b00001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYONE;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }

      state.TWENTYONE:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b00001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYTWO;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }

      state.TWENTYTWO:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b00001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYTHREE;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }

      state.TWENTYTHREE:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b00001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYFOUR;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }

      state.TWENTYFOUR:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b00001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYFIVE;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }

      state.TWENTYFIVE:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b00001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYSIX;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }

      state.TWENTYSIX:
        alu.firstNumber = h0001;
        alu.secondNumber = hF003;
        alu.alufn = b00001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYSEVEN;
          if(alu.answer != hF004){
            state.d = state.ERROR;
          }
        }
        
        // STOP HERE
      state.TWENTYSEVEN:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b1010101010101010;
        alu.alufn = b011000;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYEIGHT;
          if(alu.answer != b0000000000000000){
            state.d = state.ERROR;
          }
        }

      state.TWENTYEIGHT:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b1111000011110000;
        alu.alufn = b011000;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.TWENTYNINE;
          if(alu.answer != b1111000011110000){
            state.d = state.ERROR;
          }
        }

      state.TWENTYNINE:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b1010101010101010;
        alu.alufn = b011110;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTY;
          if(alu.answer != b1111111111111111){
            state.d = state.ERROR;
          }
        }

      state.THIRTY:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b1111000011110000;
        alu.alufn = b011110;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYONE;
          if(alu.answer != b1111010111110101){
            state.d = state.ERROR;
          }
        }

      state.THIRTYONE:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b1010101010101010;
        alu.alufn = b010110;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYTWO;
          if(alu.answer != b1111111111111111){
            state.d = state.ERROR;
          }
        }

      state.THIRTYTWO:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b1111000011110000;
        alu.alufn = b010110;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYTHREE;
          if(alu.answer != b1010010110100101){
            state.d = state.ERROR;
          }
        }

      state.THIRTYTHREE:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b1111000011110000;
        alu.alufn = b011010;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYFOUR;
          if(alu.answer != b0101010101010101){
            state.d = state.ERROR;
          }
        }

      state.THIRTYFOUR:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b0101010101010101;
        alu.alufn = b011010;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYFIVE;
          if(alu.answer != b0101010101010101){
            state.d = state.ERROR;
          }
        }

      state.THIRTYFIVE:
        alu.firstNumber = b1111111111111111;
        alu.secondNumber = b1111;
        alu.alufn = b100000;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYSIX;
          if(alu.answer != b1000000000000000){
            state.d = state.ERROR;
          }
        }

      state.THIRTYSIX:
        alu.firstNumber = b1111111111111110;
        alu.secondNumber = b1111;
        alu.alufn = b100000;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYSEVEN;
          if(alu.answer != b0000000000000000){
            state.d = state.ERROR;
          }
        }

      state.THIRTYSEVEN:
        alu.firstNumber = b1010101010101010;
        alu.secondNumber = b10;
        alu.alufn = b100000;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYEIGHT;
          if(alu.answer != b1010101010101010){
            state.d = state.ERROR;
          }
        }

      state.THIRTYEIGHT:
        alu.firstNumber = b1111111111111111;
        alu.secondNumber = b1111;
        alu.alufn = b100001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.THIRTYNINE;
          if(alu.answer != b0000000000000001){
            state.d = state.ERROR;
          }
        }

      state.THIRTYNINE:
        alu.firstNumber = b0111111111111111;
        alu.secondNumber = b1111;
        alu.alufn = b100001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.FORTY;
          if(alu.answer != b0000000000000000){
            state.d = state.ERROR;
          }
        }

      state.FORTY:
        alu.firstNumber = b1010101010101010;
        alu.secondNumber = b10;
        alu.alufn = b100001;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.FORTYONE;
          if(alu.answer != b0010101010101010){
            state.d = state.ERROR;
          }
        }

      state.FORTYONE:
        alu.firstNumber = b1010101010101010;
        alu.secondNumber = b1111;
        alu.alufn = b100011;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.FORTYTWO;
          if(alu.answer != b1111111111111111){
            state.d = state.ERROR;
          }
        }

      state.FORTYTWO:
        alu.firstNumber = b0101010101010101;
        alu.secondNumber = b1111;
        alu.alufn = b100011;
        io_led[1] = alu.answer[15:8];
        io_led[0] = alu.answer[7:0];
        if(edge_detector.out){
          state.d = state.START;
          if(alu.answer != b0000000000000000){
            state.d = state.ERROR;
          }
        }
      
      state.ERROR:
        seg.values = {4b1100,4b1010,4b1011,4b1011};
        if(io_button[0]){
          state.d = state.START;
        }
        
  }
}